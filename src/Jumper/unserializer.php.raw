namespace Jeremeamia\SuperClosure;class SerializableClosure implements \Serializable{protected $closure;protected $reflection;private $state;public function __construct(\Closure $closure){$this->closure=$closure;}public function getReflection(){if(!$this->reflection){$this->reflection = new \ReflectionFunction($this->closure);}return $this->reflection;}public function __invoke(){return $this->getReflection()->invokeArgs(func_get_args());}public function serialize(){}public function unserialize($__serialized__){$this->state=unserialize($__serialized__);list($__code__,$__context__)=$this->state;extract($__context__);eval("\$this->closure={$__code__};");}}
